  ---
  import Layout from '~/layouts/PageLayout.astro';

  const metadata = {
    title: 'Solicitud de presupuesto',
  };

  // Constante para el tipo de calendario
  const tipoCalendario = 'mesa-espiral';


  ---

  <Layout metadata={metadata}>
    
    <div class="max-w-xl mx-auto bg-white p-6 rounded-lg shadow-lg">
      <form id="form-presupuesto" class="space-y-6">
        <div>
          <label for="nombre" class="block text-sm font-medium text-gray-700">Nombre</label>
          <input
            type="text"
            name="nombre"
            id="nombre"
            class="block w-full px-4 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            placeholder="Tu nombre"
            required
          />
        </div>

        <div>
          <label for="email" class="block text-sm font-medium text-gray-700">Correo electrónico</label>
          <input
            type="email"
            name="email"
            id="email"
            class="block w-full px-4 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            placeholder="Tu correo"
            required
          />
        </div>

        <div>
          <label for="telefono" class="block text-sm font-medium text-gray-700">Teléfono</label>
          <input
            type="tel"
            name="telefono"
            id="telefono"
            class="block w-full px-4 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            placeholder="Tu teléfono"
            required
          />
        </div>

        <div>
          <label for="empresa" class="block text-sm font-medium text-gray-700">Empresa (Opcional)</label>
          <input
            type="text"
            name="empresa"
            id="empresa"
            class="block w-full px-4 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            placeholder="Tu empresa"
          />
        </div>

        <!-- Campo oculto para el tipo de calendario -->
        <input type="hidden" name="tipo" value={tipoCalendario} />

        <!-- Selector de medidas -->
        <div>
          <label for="medida" class="block text-sm font-medium text-gray-700">Medida</label>
          <select
            id="medida"
            name="medida"
            class="block w-full px-4 py-2 mt-1 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
            required
          >
            <option value="15x15 cm">15x15 cm</option>
            <option value="21x10 cm">21x10 cm</option>
            <option value="Din A5">Din A5</option>
          </select>
        </div>

        <!-- Cantidad de calendarios -->
        <div>
          <label class="block text-sm font-medium text-gray-700">Cantidad</label>
          <div id="cantidad-selector" class="flex justify-between flex-wrap gap-2 mt-2">
            <!-- Botones para seleccionar cantidad -->
            <button type="button" class="cantidad-btn py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" data-value="100">100</button>
            <button type="button" class="cantidad-btn py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" data-value="200">200</button>
            <button type="button" class="cantidad-btn py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" data-value="500">500</button>
            <button type="button" class="cantidad-btn py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" data-value="750">750</button>
            <button type="button" class="cantidad-btn py-2 px-4 border border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500" data-value="1000">1000</button>
          </div>
          <input type="hidden" name="cantidad" id="cantidad" required />
        </div>

        <!-- Feedback messages -->
        <div id="feedback" class="hidden p-4 text-white rounded-md"></div>

        <button
          type="submit"
          class="w-full bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
        >
          Enviar
        </button>
      </form>
    </div>
  </Layout>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('form-presupuesto');
      const cantidadButtons = document.querySelectorAll('.cantidad-btn');
      const cantidadInput = document.getElementById('cantidad');
      const feedback = document.getElementById('feedback');

      // Añadir funcionalidad para seleccionar cantidad al hacer clic en los botones
      cantidadButtons.forEach(button => {
        button.addEventListener('click', () => {
          // Quitar selección de todos los botones
          cantidadButtons.forEach(btn => btn.classList.remove('bg-blue-500', 'text-white'));
          // Añadir selección al botón clicado
          button.classList.add('bg-blue-500', 'text-white');
          // Asignar el valor al campo oculto
          cantidadInput.value = button.dataset.value;
        });
      });

      if (form) {
        form.addEventListener('submit', async (event) => {
          event.preventDefault();

          const formData = new FormData(form);
          const data = Object.fromEntries(formData.entries());

          try {
            const response = await fetch('/api/send-email', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(data),
            });

            if (response.ok) {
              feedback.textContent = 'Correo enviado correctamente';
              feedback.classList.remove('hidden', 'bg-red-500');
              feedback.classList.add('bg-green-500');
              form.reset();

              // Redireccionar a la página de inicio después de 3 segundos
              setTimeout(() => {
                window.location.href = '/';
              }, 3000);
            } else {
              feedback.textContent = 'Error al enviar el correo';
              feedback.classList.remove('hidden', 'bg-green-500');
              feedback.classList.add('bg-red-500');
            }
          } catch (error) {
            console.error('Error en el envío del formulario:', error);
            feedback.textContent = 'Error en el envío';
            feedback.classList.remove('hidden', 'bg-green-500');
            feedback.classList.add('bg-red-500');
          }
        });
      } else {
        console.error('Formulario no encontrado');
      }
    });
  </script>
