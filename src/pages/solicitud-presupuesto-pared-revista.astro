---
import Layout from '~/layouts/PageLayout.astro';
import sendGrid from '@sendgrid/mail';
import FormContainer from '~/components/ui/Form.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';

// Configuración de SendGrid
sendGrid.setApiKey(import.meta.env.SENDGRID_API_KEY);

const metadata = {
  title: 'Solicitar presupuesto para calendarios de pared tipo revista',
};

// Definir las características específicas para el calendario de pared tipo revista
const calendarDetails = {
  title: 'Pared Revista',
  subtitle: 'Nuestros calendarios tipo revista son perfectos para destacar tu marca de manera elegante.',
  medidas: ['33x23 cm (cerrado)', '33x46 cm (abierto)'],
};

// Entradas del formulario para calendarios de pared tipo revista
const inputs = [
  { type: 'text', name: 'name', label: 'Nombre', required: true },
  { type: 'email', name: 'email', label: 'Email', required: true },
  { type: 'tel', name: 'telefono', label: 'Teléfono', required: true },
  { type: 'text', name: 'empresa', label: 'Empresa', required: false },
  {
    type: 'select', 
    name: 'medida', 
    label: 'Medida Calendario', 
    required: true,
    options: calendarDetails.medidas.map((medida) => ({ value: medida, label: medida })),
  },
  {
    type: 'select', 
    name: 'cantidad', 
    label: 'Cantidad', 
    required: true,
    options: [
      { value: '100', label: '100' },
      { value: '200', label: '200' },
      { value: '500', label: '500' },
      { value: '1000', label: '1000' },
    ],
  },
];

const disclaimer = {
  label: 'Al enviar este formulario, aceptas nuestra política de privacidad.',
};

const button = 'Enviar';

const description = "Completa el formulario para solicitar un presupuesto para nuestros calendarios de pared tipo revista.";

// Lógica del servidor para enviar el correo a través de SendGrid
if (Astro.request.method === 'POST') {
  try {
    const data = await Astro.request.formData();
    const name = data.get('name');
    const email = data.get('email');
    const telefono = data.get('telefono');
    const empresa = data.get('empresa') || 'No proporcionado';
    const tipo = data.get('tipo') || 'Pared Revista';
    const medida = data.get('medida') || 'No seleccionado';
    const cantidad = data.get('cantidad') || 'No seleccionado';

    const messageContent = `
      Nombre: ${name}
      Email: ${email}
      Teléfono: ${telefono}
      Empresa: ${empresa}
      Tipo de Calendario: ${tipo}
      Medida: ${medida}
      Cantidad: ${cantidad}
    `;

    const msg = {
      to: email,
      from: 'noreply@reprodisseny.com',
      replyTo: { email, name },
      subject: `Solicitud de presupuesto de ${name}`,
      text: messageContent,
    };

    await sendGrid.send(msg).then(() => {
      console.log('Correo enviado correctamente');
    }).catch((error) => {
      console.error('Error al enviar el correo:', error);
    });

  } catch (error) {
    console.error('Error al procesar el formulario:', error);
  }
}
---

<Layout metadata={metadata}>
  <WidgetWrapper containerClass="max-w-7xl mx-auto">
    <Headline title="Solicitar presupuesto para tus Calendarios de Pared Tipo Revista" subtitle="Conéctate con nosotros para personalizar el calendario tipo revista perfecto y promocionar tu marca todo el año." />
    
    <!-- Contenedor del formulario -->
    <div class="flex flex-col max-w-xl mx-auto rounded-lg backdrop-blur border border-gray-200 dark:border-gray-700 bg-white dark:bg-slate-900 shadow p-4 sm:p-6 lg:p-8 w-full">
      <form id="contact-form">
        <FormContainer
          inputs={inputs}
          disclaimer={disclaimer}
          button={button}
          description={description}
        />
        <div id="form-feedback" class="hidden mt-4 p-4 text-white bg-red-500 rounded"></div> <!-- Contenedor para mensajes al final del formulario -->
      </form>
    </div>
  </WidgetWrapper>

   <!-- Script para manejar la actualización dinámica -->
   <script>
    document.addEventListener('DOMContentLoaded', async () => {
      const form = document.querySelector('#contact-form');
      const feedback = document.querySelector('#form-feedback');

      form?.addEventListener('submit', async (event) => {
        event.preventDefault();

        const formData = new FormData(form);
        const jsonData = Object.fromEntries(formData.entries());

        try {
          const response = await fetch(window.location.href, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/x-www-form-urlencoded',
            },
            body: new URLSearchParams(jsonData).toString(),
          });

          if (response.ok) {
            feedback.classList.remove('bg-red-500');
            feedback.classList.add('bg-green-500');
            feedback.innerHTML = 'Correo enviado correctamente.';
            feedback.classList.remove('hidden');
            form.reset();
            redirectToHome();
          } else {
            feedback.innerHTML = 'Error al enviar el correo.';
            feedback.classList.add('bg-red-500');
            feedback.classList.remove('hidden');
          }
        } catch (error) {
          console.error('Error en la solicitud:', error);
          feedback.innerHTML = 'Error en el envío del formulario.';
          feedback.classList.add('bg-red-500');
          feedback.classList.remove('hidden');
        }
      });
    });

    function redirectToHome() {
      setTimeout(() => {
        window.location.href = '/';
      }, 3000);
    }
  </script>
</Layout>
