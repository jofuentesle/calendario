---
import Layout from '~/layouts/PageLayout.astro';
import HeroText from '~/components/widgets/HeroText.astro';
import ContactUs from '~/components/widgets/Contact.astro';

const metadata = {
  title: 'Solicitud de presupuesto para Calendarios',
};

const title = 'Solicita tu presupuesto para Calendarios 2025';
const subtitle = 'Rellena el formulario para obtener un presupuesto personalizado para tus calendarios.';
---

<Layout metadata={metadata}>

  <ContactUs
    id="form-contact"
    method="POST"
    title={title}
    subtitle={subtitle}
    inputs={[
      {
        type: 'text',
        name: 'nombre',
        label: 'Nombre',
      },
      {
        type: 'email',
        name: 'email',
        label: 'Correo electrónico',
      },
      {
        type: 'tel',
        name: 'telefono',
        label: 'Teléfono',
      },
      
    ]}
    disclaimer={{
      label:
        'Al enviar este formulario de contacto, reconoces y aceptas la recopilación de tu información personal.',
    }}
    description="Nuestro equipo de soporte generalmente responde dentro de las 24 horas hábiles."
  />
  
  
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('form-contact');
    const feedback = document.getElementById('feedback');

    if (form && feedback) {
      form.addEventListener('submit', async (e) => {
        e.preventDefault();  // Evita el envío predeterminado de GET

        const formData = new FormData(e.target);  // Obtener los datos del formulario
        const data = Object.fromEntries(formData.entries());  // Convertir a objeto

        try {
          const response = await fetch('/api/send-email', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
          });

          if (response.ok) {
            feedback.textContent = 'Correo enviado correctamente';
            feedback.classList.remove('hidden');
            feedback.classList.remove('bg-red-500');
            feedback.classList.add('bg-green-500');
            formElemet.reset();  
            
            // Limpiar el formulario
            setTimeout(() => {
              window.location.href = '/';  // Redirigir a home
              window.location.reload();  // Recargar la página
            }, 2000);  // Espera 2 segundos antes de redirigir

             // Limpiar el formulario
          } else {
            feedback.textContent = 'Error al enviar el correo';
            feedback.classList.remove('hidden');
            feedback.classList.remove('bg-green-500');
            feedback.classList.add('bg-red-500');
          }
        } catch (error) {
          console.error('Error al enviar el formulario:', error);
          feedback.textContent = 'Error en el envío del formulario';
          feedback.classList.remove('hidden');
          feedback.classList.remove('bg-green-500');
          feedback.classList.add('bg-red-500');
        }
      });
    } else {
      console.error('Formulario o feedback no encontrado');
    }
  });
</script>


